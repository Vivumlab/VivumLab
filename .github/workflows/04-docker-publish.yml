name: "Publish to Registry"

on:
  workflow_dispatch:
  release:
    types:
      - released
  push:
    branches:
      - dev
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+$'
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 02:00

jobs:
  multi-publish-to-docker:
    runs-on: ubuntu-latest
    if: "github.ref != 'refs/heads/dev'"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3.4.0
        with:
          images: ${{ secrets.HUB_DOCKER_IMAGENAME }} # list of Docker images to use as base name for tags
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
            {{major}}
          tag-sha: false # add git short SHA as Docker tag
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push amd64
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker/docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: |
            build
          push: ${{ github.event_name != 'pull_request' }}
          set: build.args.ARG_VERSION=v${{ steps.docker_meta.outputs.version }}
      - name: Build and push
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker/docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: |
            build-all
          push: ${{ github.event_name != 'pull_request' }}
          set: build-all.args.ARG_VERSION=v${{ steps.docker_meta.outputs.version }}
  multi-publish-to-docker-dev:
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/dev' && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3.4.0
        with:
          images: ${{ secrets.HUB_DOCKER_IMAGENAME }}
          tag-custom-only: true
          tag-custom: dev
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push amd64
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker/docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: |
            build-dev
          push: ${{ github.event_name != 'pull_request' }}
          set: build-dev.args.ARG_VERSION=dev
      - name: Build and push
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker/docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: |
            build-dev-all
          push: ${{ github.event_name != 'pull_request' }}
          set: build-dev-all.args.ARG_VERSION=dev
