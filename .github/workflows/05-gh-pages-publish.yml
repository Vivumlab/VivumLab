name: github pages

on:
  pull_request:
    paths:
      - '.github/workflows/05-gh-pages-publish.yml'
      - 'website/**'
  push:
    branches:
      - master
    paths:
      - '.github/workflows/05-gh-pages-publish.yml'
      - 'website/**'

jobs:
  checks:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '12.x'
      - name: Run Playbook Config
        run: |
          date +%s | sha256sum | base64 | head -c 32  > ~/.vlab_vault_pass
          mkdir -p settings_ci
          mkdir -p settings_ci/passwords
          echo "blank_on_purpose: True" > settings_ci/config.yml
          echo "blank_on_purpose: True" > settings_ci/vault.yml
          echo "PASSWORDLESS_SSHKEY=''" > tasks/ansible_bash.vars
          ansible-playbook -vvvv --extra-vars="@settings_ci/config.yml" --extra-vars="@settings_ci/vault.yml" -i inventory playbook.ci_config.yml --vault-password-file ~/.vlab_vault_pass
          ansible-vault encrypt settings_ci/vault.yml --vault-password-file ~/.vlab_vault_pass
      - name: Run Playbook
        run: ansible-playbook -vvvv --extra-vars="@settings_ci/config.yml" --extra-vars="@settings_ci/vault.yml" -i inventory playbook.ci.yml --vault-password-file ~/.vlab_vault_pass
      - name: Test Build
        run: |
          yarn install --frozen-lockfile
          npm run build
        working-directory: website
  gh-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12.x'

      - run: ./vlab ci
        working-directory: ../

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-website-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
