---
- name: Make dockercache directory.
  file:
    path: "{{ volumes_root }}/dockercache"
    state: directory
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  become: yes

- name: Make dockercache directory.
  file:
    path: "/etc/systemd/system/docker.service.d"
    state: directory
  become: yes

- name: Copy dockercache docker-compose.yml file into place.
  template:
    src: docker-compose.dockercache.yml.j2
    dest: "{{ volumes_root }}/dockercache/docker-compose.yml"
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  vars:
    tor_domain: "{{ tor_http_domain_file.stdout | default('') }}"
  become: yes

- name: Configure dockercache systemd service.
  become: yes
  template:
    src: service.j2
    dest: /etc/systemd/system/dockercache.service

- name: Pull dockercache Image
  docker_compose:
    project_src: "{{ volumes_root}}/dockercache"
    pull: true
    state: present
  ignore_errors: yes

- name: Start dockercache
  systemd:
    name: dockercache
    enabled: yes
    daemon-reload: yes
    state: started
  become: yes

# - name: Get the CA certificate from the proxy
#   shell: |
#     curl http://127.0.0.1:3128/ca.crt > /usr/share/ca-certificates/docker_registry_proxy.crt
#     echo "docker_registry_proxy.crt" >> /etc/ca-certificates.conf
#     update-ca-certificates --fresh
#   become: yes

# - name: Configure dockercache systemd service.
#   become: yes
#   template:
#     src: http-proxy.conf.j2
#     dest: /etc/systemd/system/docker.service.d/http-proxy.conf

# - name: Restart docker.service
#   systemd:
#     name: docker.service
#     enabled: yes
#     daemon-reload: yes
#     state: restarted
#   become: yes
