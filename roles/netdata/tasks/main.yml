---
- name: Make netdata directories
  file:
    path: "{{ volumes_root }}/netdata/{{item}}"
    state: directory
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  loop:
    - "config"
  become: yes

- name: Install necessities and nice-to-haves
  become: yes
  apt:
    name:
      - apache2-utils
  when: (ansible_facts['distribution'] == "Ubuntu") or (ansible_facts['distribution'] == "Debian")

- name: Test Setting Fact.
  shell: htpasswd -nbB {{ default_username }} "{{ default_password }}" | sed -e s/\\$/\\$\\$/g
  register: htpasswd

- debug:
    msg: "{{htpasswd.stdout}}"

- name: Copy netdata docker-compose.yml file into place.
  template:
    src: docker-compose.netdata.yml.j2
    dest: "{{ volumes_root }}/netdata/docker-compose.yml"
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  vars:
    tor_domain: "{{ tor_http_domain_file.stdout | default('') }}"
    htpasswd: "{{htpasswd.stdout}}"
  become: yes

- name: Configure netdata systemd service.
  template:
    src: service.j2
    dest: /etc/systemd/system/netdata.service
  become: yes

- name: Pull netdata docker images
  docker_compose:
    project_src: "{{ volumes_root}}/netdata"
    pull: true
    state: present
  ignore_errors: yes

- name: Check that the netdata.conf exists
  stat:
    path: "{{ volumes_root}}/netdata/config/netdata.conf"
  register: netdataconf_result

- name: Create temp container.
  shell: docker run -d --name netdata_tmp netdata/netdata:{{ netdata.version }}
  when: not netdataconf_result.stat.exists

- name: Copy config in the directory.
  shell: docker cp netdata_tmp:/etc/netdata {{ volumes_root}}/netdata/config
  when: not netdataconf_result.stat.exists
  become: yes

- name: Remove temp container.
  shell: docker rm -f netdata_tmp
  ignore_errors: yes

- name: Start netdata
  systemd:
    name: netdata
    enabled: yes
    daemon-reload: yes
    state: started
  become: yes
