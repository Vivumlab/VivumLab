---
- name: Make peertube directory.
  file:
    state: directory
    path: "{{ volumes_root }}/peertube/{{ item }}"
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  loop:
    - "config"
    - "data"
    - "redis"
    - "opendkim/keys"
  become: yes
    
- name: Make peertube db directory.
  file:
    state: directory
    path: "{{ volumes_root }}/peertube/db"

- name: Make peertube db directory.
  file:
    state: directory
    path: "{{ volumes_root }}/peertube/db"

- name: Copy peertube docker-compose.yml file into place.
  template:
    src: docker-compose.peertube.yml.j2
    dest: "{{ volumes_root }}/peertube/docker-compose.yml"
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  vars:
    tor_domain: "{{ tor_http_domain_file.stdout | default('') }}"
  become: yes

- name: Copy peertube .env file into place.
  template:
    src: peertube.env.j2
    dest: "{{ volumes_root }}/peertube/.env.peertube"
    owner: "{{ uid_output.stdout }}"
    group: "{{ gid_output.stdout }}"
  become: yes

- name: Configure peertube systemd service.
  template:
    src: service.j2
    dest: /etc/systemd/system/peertube.service
  become: yes

- name: Start peertube
  systemd:
    name: peertube
    enabled: yes
    daemon-reload: yes
    state: started
  become: yes
