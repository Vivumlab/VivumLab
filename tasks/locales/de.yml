de:
  config:
    s_creating: "Creating, or updating Config file #{options[:config_dir]}/config.yml"
    s_resetting: "Resetting config file #{options[:config_dir]}/config.yml"
    s_backup: "Backing up your existing config"
    s_editfile: "Decrypting and editing the config file at #{options[:config_dir]}/encrypted.yml"
    s_editerror: "Something went wrong executing the decryption and or editing the file"
    s_fileremove: "For security reasons, the temporary decrypted config file has been deleted."
    s_decrypted: "Config file is now, decrypted"
    s_encrypted: "Config file is now, encrypted"
    s_nokey: "Key #{options[:config_key]} not found in either config file. Did you spell it right?"
    s_keynomatch: "Unable to find a full match for the key %{config_key}"
    s_possiblekey: "Here's some possible matches:"

  core:
    s_currentversion: "You have version #{current_version}"
    s_versionlatest: "You're up to date"
    s_versionupdate: "Consider updating to #{latest_version}"
    s_deploy: "Deploying Vivumlab"
    s_uninstall: |+
      "Uninstalling VivumLab is irreversible, and should always be done with caution"
      "Make sure to backup any files that you may want to keep before uninstalling"
    q_uninstall: "Are you sure you want to uninstall VivumLab"
    q_uninstallconfirm: "Confirm again, if you are sure"
    s_uninstalled: "VivumLab has been uninstalled."
    s_restoring: "Restoring your backups, now.."
    s_restored: "Backups have been restored"

  deprecated:
    s_encrypting: "Encrypting the vault"
    s_encrypted: "Vault Encrypted"
    s_decrypting: "Decrypting the vault"
    s_decrypted: "Vault Decrypted"
    s_failencrypt: "This command can fail, if the vault was already encrypted"
    s_faildecrypt: "This command can fail, if the vault was already decrypted"

  dev:
    s_welcome: "Welcome to VivumLab Developer Setup"
    q_contribute: "Do you want to contribute to VivumLab (Yes or no)?"
    s_thanks: "Thanks for helping out"
    s_readdevdocs: |+
      "First and foremost, please make sure you have read the developer docs"
      "You can find the developers docs. here:"
      "# TODO: add url to dev docs"

    s_precommitwarning: "Before you push any changes you've made, pre-commit will need to be installed on your system"
    s_pythonerror: "VivumLab was unable to find Python3 using `which python3`. VivumLab requires python3"
    s_precommiterror: "Unable to find pre-commit in your path, you may need to add ~/bin to your path."
    s_readythanks: |+
      "Ok, all set! Thank you for being a part of the VivumLab Community"
      "We hope that you will enjoy your time with us"
      "And we look forward to achieving great things, together"

  git:
    s_settingssyncing: "Syncing settings via Git"
    s_settingssynced: "Settings synced"
    s_notsetup: |+
      "Warning! Your settings directory is not setup as a Git Repository"
      "Make sure to back them up using some other method. For more information, see:"
      "https://vivumlab.com/setup/installation/#syncing-settings-via-git"
    s_trackbranch: "You are now tracking the #{options[:branch]} branch"

  migration:
    s_notdone: "Single Config Migration did not run, because it was not needed"

  sanity_checks:
    s_localpassed: "Local sanity checks passed."
    s_sshkeyverifying: "Verifying SSH keys, and the ability to remotely log in to your VivumLab server via passwordless SSH"
    s_sshkeyverified: "SSH Keys are good to go!"
    s_vaultpassmissing: |+
      "Oops, your vault password in #{Dir.home}, doesn't appear to exist."
      "This is unusual, but could be the result of the username changing after setup."
    s_vaultpasscreate: |+
      "A new `.vlab_vault_pass` file can be created for you;"
      "or you can exit, and try to sort this out yourself."
    q_vaultpasscreate: "Let VivumLab create a new .vlab_vault_pass for you? [y/n]"
    s_gitnoexist: "You need to install git!"
    s_lowprecommit: |+
      "Pre-commit is not installed or an earlier version than required."
      "Contributing to VivumLab requires Pre-Commit version #{REQUIRED_PRECOMMIT_VERSION} or above."

      "Run `vlab dev setup` when you're ready.."
    s_lowpython: "Python version #{REQUIRED_PYTHON_VERSION} is required for VivumLab to work"
    s_noprecommit: |+
      "Pre-commit is not installed. Contributing requires installing 'pre-commit'."
      "Run vlab dev_setup, when you're ready"
    s_sshunable: "VivumLab is unable to ssh to your server using the information in your config.yml"

  server:
    s_shutdown: "Server will shutdown in #{time} minute(s)"
    s_restart: "Server will restart in #{time} minute(s)"

  service:
    s_removing: "Removing data for service: #{options[:service]}"
    s_removed: "Data for #{options[:service]}, removed"
    s_resetting: "Resetting #{options[:service]}"
    s_reset: "#{options[:service]} has been reset}"
    s_stopping: |+
      "Note: If no services are specified, VivumLab will stop all enabled services"
      "Stopping services now.."
    s_stopped: "All specified services have been stopped"
    s_restarting: |+
      "Note: If no services are specified, VivumLab will restart all enabled services"
      "Restarting services now.."
    s_restarted: "All specified services have been restarted"
    s_updating: |+
      "Note: If no services are specified, VivumLab will update all enabled services"
      "Updating services now.."
    s_updated: "All specified services have been updated"
    s_customizing: |+
      "This command creates a file, that will override the original docker-compose file for #{options[:service]}"
      "Any changes that the user wishes to make, should be made to the override file, not the original."
      "VivumLab will not change, nor delete the original file; the original file will just be ignored"
    q_customizing: "Did you want to make changes to the #{options[:service]} service?"
    s_customized: "#{options[:service]} is ready to customize"
    s_enabled: "#{options[:service]} is now enabled"
    s_disabled: "#{options[:service]} is now disabled"

  ssh:
    s_launching: "Launching an SSH session to your server"
    s_keyexists: "SSH Key already exists at #{Dir.home}/.ssh/#{decrypted_config_file.passwordless_sshkey}"
    s_keycreating: "Creating #{decrypted_config_file.passwordless_sshkey} and #{decrypted_config_file.passwordless_sshkey}.pub"
    s_keycreated: "Key created"
    s_keycopying: "Copying keys to your server at #{decrypted_config_file.vlab_ip}"
    s_keycopied: "Key copied"

  terraform:
    s_creating: "Creating a cloud server"
    s_created_success: "Successfully created a server at: %{ip}"
    s_ip_set: |+
      "Place this IP where you want it in your settings.."
      "either as vlab_ip or bastion.server_address"

      "Then run 'vlab deploy' to complete the setup."
    s_destroying: "Destroying terraform built server"
    s_destroy_success: "Cloud server(s) destroyed."

  utils:
    s_playbookexecuting: "executing playbook command: #{playbook_command}"
    s_playbookexecuted: "#{playbook_command} finished"
    s_playbookerror: |+
      "Ansible Playbook command returned with an error code."
      "Exception is: #{e}"
    s_configplaybookerror: |+
      "Failed to run Ansible playbook: playbook.config.yml"
      "Error is: #{e}"